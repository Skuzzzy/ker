#include "gap.c"

typedef struct {
    gbuff * gbuffer;
    int goal_col;
    int col;
    int row;
    int index;
} gctl;

gctl* gctl_alloc(char * buffer) {
    gctl* gcontrol = calloc(1, sizeof(gctl));

    gbuff* gbuffer = gbuff_alloc(24);
    gbuff_init(gbuffer, buffer);

    gcontrol->gbuffer = gbuffer;
    gcontrol->row = 0;
    gcontrol->col = 0;
    gcontrol->index = 0;
    gcontrol->goal_col = gcontrol->col;
    return gcontrol;
}
void gctl_down(gctl* gcontrol) {
   // FIXME
   // Move to nextline
   // Try to move to the correct goal_col
}

void gctl_down(gctl* gcontrol) {
   // FIXME
   // Move to nextline
   // Try to move to the correct goal_col
}

void gctl_dref(gctl* gcontrol) {
    // FIXME linear referencing of gbuffer that skips the gap
}

void gctl_size(gctl* gcontrol) {
    // FIXME Size of gbuffer without the gap
}


int main() {
    return 0;
}
